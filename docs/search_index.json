[["index.html", "Customizing ggplot2 plots in R for scientific research", " Customizing ggplot2 plots in R for scientific research Bin Chi 25/11/2020 "],["introduction.html", "1 Introduction", " 1 Introduction This second CASA0005 GI Systems and Science seminar. It aims to advance your data visualization skills in R using the ggplot2 package. By the end of the seminar you will be able to: div.blue { background-color:#e6f0ff; border-radius: 5px; padding: 20px;} Advanced your knowledge about ggplot2 in R Know ten advanced customization in ggplot Create a high resolution graph for your research Trouble-soluting by yourself "],["recommend-resources.html", "2 Recommend resources 2.1 Resouces about ggplot2 packge 2.2 Resouces about graphs or data visualization in academic research 2.3 How to find more useful resources", " 2 Recommend resources Data visualisation is the visual representation of patterns in data. An efficient data visulaistion makes data more understandable. 2.1 Resouces about ggplot2 packge Data Visualization with ggplot2 Cheat Sheet - RStudio ggplot2: elegant graphics for data analysist Data Visualization in R with ggplot2 Top 50 ggplot2 Visualizations - The Master List (With Full R Code) 2.2 Resouces about graphs or data visualization in academic research Ten guidelines for effective data visualization in scientific publications Beyond Bar and Line Graphs: Time for a New Data Presentation Paradigm How to Write a Paper R Graphics Cookbook, 2nd edition Data visualization beginners guide: a definition, examples, and learning resources 2.3 How to find more useful resources GOOGLE "],["recap.html", "3 Recap", " 3 Recap Graphs need to be clear, precise and efficient, below listed some requirements of graphs: div.blue { background-color:#e6f0ff; border-radius: 5px; padding: 20px;} Have a title or figure caption Label axes Axis labels with units Have a legend Legible font size Good resolution Tip: When you are ready to create your figures,it worthwhile to understand the manuscript requirement first.Now let use have a look at the CASA0005 assessment mark scheme. Meanwhile,different journals or publishers have different requirements for figures. SAGE Publishing manuscript Submission Guidelines Manuscript Submission Guidelines Nature submission guidelines Wiley manuscript preparation guidelines Graphic in academic research is generally expected to be clear, concise and easy to read. Now lets have a look at some examples in GIS course assignment last year. Example 4 "],["getting-started.html", "4 Getting started 4.1 Installing ggplot2 package 4.2 Loading ggplot2 package 4.3 Dataset", " 4 Getting started 4.1 Installing ggplot2 package If you have installed ggplot2 package before, you can jump to the next step. #install.packages(&quot;ggplot2&quot;) 4.2 Loading ggplot2 package Load the packages for todays seminar. #load the package for this seminar library(ggplot2) Note: Once you loaded the package successfully, there will be a check mark display before the package under your Packages tab at the bottom right pane. 4.3 Dataset Lets start by loading two datasets. The first dataset records 924 transaction in 2009 for two local authorities in England. The second the data records the median house price per square meter for each region in England between 2009 and 2016. These two datasets are derived from a linked house price in England (CASA working paper213). # read in the first dataset housedata1&lt;-read.csv(&quot;data1.csv&quot;) # read in the second dataset housedata2 &lt;- read.csv(&quot;data2.csv&quot;) The first house price dataset contains seven fields. They separately refer to transaction price, transaction date.transaction year, propertys total floor area, the Census 2011 local authority district code, the Census 2011 local authority district name and region name. The second house price dataset contains four fields.They separately refer to the Census 2011 region code, transaction year, house price per square meter and region name. "],["graphics-with-ggplot2.html", "5 Graphics with ggplot2 5.1 Basic components of a ggplot2 Plot 5.2 Building a simple ggplot plot 5.3 Customizing the graph 5.4 Saving graphs 5.5 Extensions", " 5 Graphics with ggplot2 5.1 Basic components of a ggplot2 Plot There are two ways to produce plots in ggplot2, one is qplot() and the other is ggplot(). In this seminar we focus on ggplot. Data Visualization with ggplot2 Cheat Sheet - RStudio ggplot2 is based on the grammar of graphics, the idea that you can build every graph from the same few components: a data set, a set of geomsvisual marks that represent data points, and a coordinate system. 5.2 Building a simple ggplot plot Now let us start with creating a scatter plot using ggplot().The scatter plot is created to explore the relationship between transaction price and total floor area in two different local authorities. ### Make sure your object is data frames Since ggplot only works with data frames, we use is.data.frame()to check the whether the data is a data frame.If it is not, you need to tranfer it to a data frame #test the data set is a data frame is.data.frame(housedata1) ## [1] TRUE is.data.frame(housedata2) ## [1] TRUE ### Plot background and set the x and y axis ggplot(housedata1,aes(x=tfarea,y=price)) ### Add a layer (point) ggplot(housedata1,aes(x=tfarea,y=price))+ geom_point() 5.2.1 Color the point In ggplot, additional aesthetic values can be added in based on other properties from our dataset.Given that housedata1 records transaction price in two local authorities, we can color the points differently depending on the ldnm field. ggplot(housedata1,aes(x=tfarea,y=price))+ geom_point(aes(color=ldnm)) ### Add a linear regression line To add a linear regression line to a scatter plot, we can do this by adding stat_smooth(),method = lm refers to fit the data linear model function ggplot(housedata1,aes(x=tfarea,y=price,group=ldnm))+ geom_point(aes(color=ldnm))+ geom_smooth(method=&quot;lm&quot;) ## `geom_smooth()` using formula &#39;y ~ x&#39; ### Split a single plot into many related plots You can split the scatter plot for each local authority with facet_wrap(). ggplot(housedata1,aes(x=tfarea,y=price,group=ldnm))+ geom_point(aes(color=ldnm))+ geom_smooth(method=&quot;lm&quot;)+ facet_wrap(~ ldnm) ## `geom_smooth()` using formula &#39;y ~ x&#39; 5.3 Customizing the graph 5.3.1 Change the point color The color of the points can be control with the color aesthetic.Below is the code to color all the points in blue. ggplot(housedata1,aes(x=tfarea,y=price,group=ldnm))+ geom_point(color=&quot;#56b4e9&quot;)+ geom_smooth(method=&quot;lm&quot;)+ facet_wrap(~ ldnm) ## `geom_smooth()` using formula &#39;y ~ x&#39; 5.3.2 Change the point size The size of the points can be controlled with the size aesthetic. The default value of size is 2. The size can be set to 1.5 by the following code. ggplot(housedata1,aes(x=tfarea,y=price,group=ldnm))+ geom_point(color=&quot;#56b4e9&quot;,size = 1.2)+ geom_smooth(method=&quot;lm&quot;)+ facet_wrap(~ ldnm) ## `geom_smooth()` using formula &#39;y ~ x&#39; ### Change the point shape The size of the points can be controlled with the shape aesthetic. The default shape is solid circles and you can change with Point Shape Options in ggplot. The following code show you how to plot the point as solid squares. ggplot(housedata1,aes(x=tfarea,y=price,group=ldnm))+ geom_point(color=&quot;#56b4e9&quot;,size = 1.2, shape=15)+ geom_smooth(method=&quot;lm&quot;)+ facet_wrap(~ ldnm) ## `geom_smooth()` using formula &#39;y ~ x&#39; ### Modify fitted regression lines The default color of the fit line is blue. This can be change by setting colour,The following code set a red fit line. #method 1 ggplot(housedata1,aes(x=tfarea,y=price,group=ldnm))+ geom_point(color=&quot;#56b4e9&quot;,size = 1.2)+ geom_smooth(method=&quot;lm&quot;,colour = &quot;red&quot;)+ facet_wrap(~ ldnm) ## `geom_smooth()` using formula &#39;y ~ x&#39; # method 2 ggplot(housedata1,aes(x=tfarea,y=price,group=ldnm))+ geom_point(color=&quot;#56b4e9&quot;,size = 1.2, shape=15)+ geom_smooth(method=&quot;lm&quot;,colour = &quot;#FF0000&quot;)+ facet_wrap(~ ldnm) ## `geom_smooth()` using formula &#39;y ~ x&#39; The grey area near the fit line is confidence region.you can disabled it with se = FALSE ggplot(housedata1,aes(x=tfarea,y=price,group=ldnm))+ geom_point(color=&quot;#56b4e9&quot;,size = 1.2)+ geom_smooth(method=&quot;lm&quot;,se = FALSE)+ facet_wrap(~ ldnm) ## `geom_smooth()` using formula &#39;y ~ x&#39; ### Change the axis titles labs function can be used to change axis labels.Here are two ways to change the axis title. #Method 1 ggplot(housedata1,aes(x=tfarea,y=price,group=ldnm))+ geom_point(color=&quot;#56b4e9&quot;,size = 1.2)+ facet_wrap(~ ldnm)+ labs(x = &quot;Total floor area&quot;, y = &quot;Transaction price&quot;) #Method 2 ggplot(housedata1,aes(x=tfarea,y=price,group=ldnm))+ geom_point(color=&quot;#56b4e9&quot;,size = 1.2, shape=15)+ facet_wrap(~ ldnm)+ xlab(&quot;Total floor area&quot;)+ ylab(&quot;Transaction price&quot;) ### Add axis units 5.3.2.1 Formatting y axis and labels Below is the code for add in the y axis unit in ggplot(). ggplot(housedata1,aes(x=tfarea,y=price,group=ldnm))+ geom_point(color=&quot;#56b4e9&quot;,size = 1.2)+ facet_wrap(~ ldnm)+ xlab(&quot;Total floor area&quot;)+ ylab(&quot;Transaction price (£)&quot;) If you want to change scale the y axis in ggplot 2 to thousands, you can use scale_y_continuous. ggplot(housedata1,aes(x=tfarea,y=price,group=ldnm))+ geom_point(color=&quot;#56b4e9&quot;,size = 1.2)+ facet_wrap(~ ldnm)+ scale_y_continuous(name = &quot;Transaction Price (in £1000s)&quot;,labels = function(y) y / 1000)+ xlab(&quot;Total floor area&quot;) You can also format the y labels more readable, with some common formats in scales package.Below is the code for formatting y labels in comma. ggplot(housedata1,aes(x=tfarea,y=price/1000,group=ldnm))+ geom_point(color=&quot;#56b4e9&quot;,size = 1.2)+ facet_wrap(~ ldnm)+ scale_y_continuous(name = &quot;Transaction Price (in £1000s)&quot;,labels = scales::comma)+ xlab(&quot;Total floor area&quot;) - to transfer y axis to a percentage scale ,you can use scale_y_continuous(labels = scales::percent)' - to display dollars on y axis, you can usescale_y_continuous(labels = scales::dollar) - to display euro on y axis, you can use `scale_y_continuous(labels = scales::dollar_format(suffix = , prefix = \"\")) ### Add x axis unit Below listed two approach to label the math notation in x axis. Math Notation for R Plot Titles: expression, bquote, &amp; Greek Letters offers more bquote application in R. #method 1 ggplot(housedata1,aes(x=tfarea,y=price/1000,group=ldnm))+ geom_point(color=&quot;#56b4e9&quot;,size = 1.2)+ facet_wrap(~ ldnm)+ scale_y_continuous(name = &quot;Transaction Price (in £1000s)&quot;,labels = scales::comma)+ xlab(bquote(&quot;Total floor area (&quot; ~ m^2 ~ &quot;)&quot;)) #method 2 ggplot(housedata1,aes(x=tfarea,y=price/1000,group=ldnm))+ geom_point(color=&quot;#56b4e9&quot;,size = 1.2)+ facet_wrap(~ ldnm)+ scale_y_continuous(name = &quot;Transaction Price (in £1000s)&quot;,labels = scales::comma)+ xlab(expression(&quot;Total floor area (&quot; ~ m^2 ~ &quot;)&quot;)) ### Change x-axis breaks You can use breaks function change the x or y axis breaks label. ggplot(housedata1,aes(x=tfarea,y=price/1000,group=ldnm))+ geom_point(color=&quot;#56b4e9&quot;,size = 1.2)+ geom_smooth(method=&quot;lm&quot;,se = FALSE)+ facet_wrap(~ ldnm)+ scale_y_continuous(name = &quot;Transaction Price (in £1000s)&quot;,labels = scales::comma)+ xlab(bquote(&quot;Total floor area (&quot; ~ m^2 ~ &quot;)&quot;))+ scale_x_continuous(breaks = c(50,100,150,200,250,300)) ## `geom_smooth()` using formula &#39;y ~ x&#39; ##using seq if the breaks interval are equal ggplot(housedata1,aes(x=tfarea,y=price/1000,group=ldnm))+ geom_point(color=&quot;#56b4e9&quot;,size = 1.2)+ facet_wrap(~ ldnm)+ scale_y_continuous(name = &quot;Transaction Price (in £1000s)&quot;,labels = scales::comma)+ xlab(bquote(&quot;Total floor area (&quot; ~ m^2 ~ &quot;)&quot;))+ scale_x_continuous(breaks = seq(50,300,50)) ### Specify axiss plot range You can use limits to modify the axis limits.Below is an example to plot the total floor area below 300 . ggplot(housedata1,aes(x=tfarea,y=price/1000,group=ldnm))+ geom_point(color=&quot;#56b4e9&quot;,size = 1.2)+ facet_wrap(~ ldnm)+ scale_y_continuous(name = &quot;Transaction Price (in £1000s)&quot;,labels = scales::comma)+ xlab(bquote(&quot;Total floor area (&quot; ~ m^3 ~ &quot;)&quot;))+ scale_x_continuous(breaks = seq(50,300,50),limits = c(0, 300)) ## Warning: Removed 1 rows containing missing values (geom_point). You can do the similiar for you y axis. ggplot(housedata1,aes(x=tfarea,y=price/1000,group=ldnm))+ geom_point(color=&quot;#56b4e9&quot;,size = 1.2)+ facet_wrap(~ ldnm)+ scale_y_continuous(name = &quot;Transaction Price (in £1000s)&quot;,labels = scales::comma)+ xlab(bquote(&quot;Total floor area (&quot; ~ m^3 ~ &quot;)&quot;))+ scale_x_continuous(breaks = seq(50,300,50),limits = c(0, 300))+ scale_y_continuous(limits = c(0, 1200)) ## Scale for &#39;y&#39; is already present. Adding another scale for &#39;y&#39;, which will replace the existing scale. ## Warning: Removed 2 rows containing missing values (geom_point). ### Add in title YOU can use ggtitle() to add a title in the plot. Below is the code to do so. ggplot(housedata1,aes(x=tfarea,y=price/1000,group=ldnm))+ geom_point(color=&quot;#56b4e9&quot;,size = 1.2)+ facet_wrap(~ ldnm)+ scale_y_continuous(name = &quot;Transaction Price (in £1000s)&quot;,labels = scales::comma)+ xlab(expression(&quot;Total floor area (&quot; ~ m^3 ~ &quot;)&quot;))+ ggtitle(&quot;Transaction price against total floor area in local authorities, 2009&quot;) ### Change themes There are eight themes can be directlty used to give the plot a sonsistent customized look.theme_grey() is the default ggplot2 theme, you can use theme_bw() to remove it. ggplot(housedata1,aes(x=tfarea,y=price/1000,group=ldnm))+ geom_point(color=&quot;#56b4e9&quot;,size = 1.2)+ facet_wrap(~ ldnm)+ scale_y_continuous(name = &quot;Transaction Price (in £1000s)&quot;,labels = scales::comma)+ xlab(expression(&quot;Total floor area (&quot; ~ m^3 ~ &quot;)&quot;))+ ggtitle(&quot;Transaction price against total floor area in local authorities, 2009&quot;)+ theme_bw() Blow are listed the other six theme, you can choose one you prefer for your academic writing. ggplot(housedata1,aes(x=tfarea,y=price/1000,group=ldnm))+ geom_point(color=&quot;#56b4e9&quot;,size = 1.2)+ facet_wrap(~ ldnm)+ scale_y_continuous(name = &quot;Transaction Price (in £1000s)&quot;,labels = scales::comma)+ xlab(expression(&quot;Total floor area (&quot; ~ m^3 ~ &quot;)&quot;))+ ggtitle(&quot;Transaction price against total floor area in local authorities, 2009&quot;)+ theme_linedraw() ggplot(housedata1,aes(x=tfarea,y=price/1000,group=ldnm))+ geom_point(color=&quot;#56b4e9&quot;,size = 1.2)+ facet_wrap(~ ldnm)+ scale_y_continuous(name = &quot;Transaction Price (in £1000s)&quot;,labels = scales::comma)+ xlab(expression(&quot;Total floor area (&quot; ~ m^3 ~ &quot;)&quot;))+ ggtitle(&quot;Transaction price against total floor area in local authorities, 2009&quot;)+ theme_light() ggplot(housedata1,aes(x=tfarea,y=price/1000,group=ldnm))+ geom_point(color=&quot;#56b4e9&quot;,size = 1.2)+ facet_wrap(~ ldnm)+ scale_y_continuous(name = &quot;Transaction Price (in £1000s)&quot;,labels = scales::comma)+ xlab(expression(&quot;Total floor area (&quot; ~ m^3 ~ &quot;)&quot;))+ ggtitle(&quot;Transaction price against total floor area in local authorities, 2009&quot;)+ theme_dark() ggplot(housedata1,aes(x=tfarea,y=price/1000,group=ldnm))+ geom_point(color=&quot;#56b4e9&quot;,size = 1.2)+ facet_wrap(~ ldnm)+ scale_y_continuous(name = &quot;Transaction Price (in £1000s)&quot;,labels = scales::comma)+ xlab(expression(&quot;Total floor area (&quot; ~ m^3 ~ &quot;)&quot;))+ ggtitle(&quot;Transaction price against total floor area in local authorities, 2009&quot;)+ theme_minimal() ggplot(housedata1,aes(x=tfarea,y=price/1000,group=ldnm))+ geom_point(color=&quot;#56b4e9&quot;,size = 1.2)+ facet_wrap(~ ldnm)+ scale_y_continuous(name = &quot;Transaction Price (in £1000s)&quot;,labels = scales::comma)+ xlab(expression(&quot;Total floor area (&quot; ~ m^3 ~ &quot;)&quot;))+ ggtitle(&quot;Transaction price against total floor area in local authorities, 2009&quot;)+ theme_classic() ggplot(housedata1,aes(x=tfarea,y=price/1000,group=ldnm))+ geom_point(color=&quot;#56b4e9&quot;,size = 1.2)+ facet_wrap(~ ldnm)+ scale_y_continuous(name = &quot;Transaction Price (in £1000s)&quot;,labels = scales::comma)+ xlab(expression(&quot;Total floor area (&quot; ~ m^3 ~ &quot;)&quot;))+ ggtitle(&quot;Transaction price against total floor area in local authorities, 2009&quot;)+ theme_void() The R package ggthemes provides another gallery of custom ggplot themes.You can see detials in package:ggthemes  All Your Figure Are Belong To Us. 5.3.3 Change the font size You can manual customize the ggplot by modify the components in theme(). Below I give a series if example on how to change the font size in the plot, let us do step-by-step. (1) Change the font size of text in x and y axis and color in red ggplot(housedata1,aes(x=tfarea,y=price/1000,group=ldnm))+ geom_point(color=&quot;#56b4e9&quot;,size = 1.2)+ facet_wrap(~ ldnm)+ scale_y_continuous(name = &quot;Transaction Price (in £1000s)&quot;,labels = scales::comma)+ xlab(expression(&quot;Total floor area (&quot; ~ m^3 ~ &quot;)&quot;))+ theme_bw()+ theme(axis.title = element_text(size=15,color=&quot;red&quot;)) change the font size of x and y label in the plot and color in red ggplot(housedata1,aes(x=tfarea,y=price/1000,group=ldnm))+ geom_point(color=&quot;#56b4e9&quot;,size = 1.2)+ facet_wrap(~ ldnm)+ scale_y_continuous(name = &quot;Transaction Price (in £1000s)&quot;,labels = scales::comma)+ xlab(expression(&quot;Total floor area (&quot; ~ m^3 ~ &quot;)&quot;))+ theme_bw()+ theme(axis.title = element_text(size=15),axis.text = element_text(size=13,color=&quot;red&quot;)) (3) change the font size of facet labels in the plot and color in red ggplot(housedata1,aes(x=tfarea,y=price/1000,group=ldnm))+ geom_point(color=&quot;#56b4e9&quot;,size = 1.2)+ facet_wrap(~ ldnm)+ scale_y_continuous(name = &quot;Transaction Price (in £1000s)&quot;,labels = scales::comma)+ xlab(expression(&quot;Total floor area (&quot; ~ m^3 ~ &quot;)&quot;))+ theme_bw()+ theme(axis.title = element_text(size=15),axis.text = element_text(size=13),strip.text = element_text(size=15,color=&quot;red&quot;)) (4) change the font size of legend item labels in the plot and color in red ggplot(housedata1,aes(x=tfarea,y=price/1000,group=ldnm))+ geom_point(aes(color=ldnm),size = 1.2)+ facet_wrap(~ ldnm)+ scale_y_continuous(name = &quot;Transaction Price (in £1000s)&quot;,labels = scales::comma)+ xlab(expression(&quot;Total floor area (&quot; ~ m^3 ~ &quot;)&quot;))+ theme_bw()+ theme(axis.title = element_text(size=15),axis.text = element_text(size=13),strip.text = element_text(size=15),legend.text = element_text(size=13,color=&quot;red&quot;)) ## (5)change the font size of title of legend in the plot and color in red ggplot(housedata1,aes(x=tfarea,y=price/1000,group=ldnm))+ geom_point(aes(color=ldnm),size = 1.2)+ facet_wrap(~ ldnm)+ scale_y_continuous(name = &quot;Transaction Price (in £1000s)&quot;,labels = scales::comma)+ xlab(expression(&quot;Total floor area (&quot; ~ m^3 ~ &quot;)&quot;))+ theme_bw()+ theme(axis.title = element_text(size=15),axis.text = element_text(size=13),strip.text = element_text(size=15),legend.text = element_text(size=13),legend.title = element_text(size=15,color=&quot;red&quot;)) ## You may wondering how to change the lengend text in above plot. Below is the answer: ggplot(housedata1,aes(x=tfarea,y=price/1000,group=ldnm))+ geom_point(aes(color=ldnm),size = 1.2)+ facet_wrap(~ ldnm)+ scale_y_continuous(name = &quot;Transaction Price (in £1000s)&quot;,labels = scales::comma)+ xlab(expression(&quot;Total floor area (&quot; ~ m^3 ~ &quot;)&quot;))+ theme_bw()+ theme(axis.title = element_text(size=15),axis.text = element_text(size=13),strip.text = element_text(size=15),legend.text = element_text(size=13),legend.title = element_text(size=15,color=&quot;red&quot;))+ labs(color = &quot;Local authority&quot;) 5.3.4 Add in the Pearson correlation coefficient result in the plot Since the aims of plot this satter plot is to explore the relationship between transaction price and propertys total floor area. Pearson correlation coefficient is more suitable to consider in the plot. # calutate the Pearson correlation coefficient for each local authority cor.test(housedata1[housedata1$laua==&quot;E07000208&quot;,]$price,housedata1[housedata1$laua==&quot;E07000208&quot;,]$tfarea,method=&quot;pearson&quot;)$p.value ## [1] 3.781275e-234 cor.test(housedata1[housedata1$laua==&quot;E07000208&quot;,]$price,housedata1[housedata1$laua==&quot;E07000208&quot;,]$tfarea,method=&quot;pearson&quot;) ## ## Pearson&#39;s product-moment correlation ## ## data: housedata1[housedata1$laua == &quot;E07000208&quot;, ]$price and housedata1[housedata1$laua == &quot;E07000208&quot;, ]$tfarea ## t = 47.805, df = 781, p-value &lt; 2.2e-16 ## alternative hypothesis: true correlation is not equal to 0 ## 95 percent confidence interval: ## 0.8443096 0.8801316 ## sample estimates: ## cor ## 0.8633039 #0.86 cor.test(housedata1[housedata1$laua==&quot;E09000001&quot;,]$price,housedata1[housedata1$laua==&quot;E09000001&quot;,]$tfarea,method=&quot;pearson&quot;)$p.value ## [1] 5.008952e-41 cor.test(housedata1[housedata1$laua==&quot;E09000001&quot;,]$price,housedata1[housedata1$laua==&quot;E09000001&quot;,]$tfarea,method=&quot;pearson&quot;) ## ## Pearson&#39;s product-moment correlation ## ## data: housedata1[housedata1$laua == &quot;E09000001&quot;, ]$price and housedata1[housedata1$laua == &quot;E09000001&quot;, ]$tfarea ## t = 19.244, df = 139, p-value &lt; 2.2e-16 ## alternative hypothesis: true correlation is not equal to 0 ## 95 percent confidence interval: ## 0.8001865 0.8922424 ## sample estimates: ## cor ## 0.8527027 #0.85 # add coefficient and p value in the graph ggplot(housedata1,aes(x=tfarea,y=price/1000))+ geom_point(color=&quot;#56b4e9&quot;,size = 1.2)+ facet_wrap(~ ldnm)+ scale_y_continuous(name = &quot;Transaction Price (in £1000s)&quot;,labels = scales::comma)+ xlab(expression(&quot;Total floor area (&quot; ~ m^2 ~ &quot;)&quot;))+ theme_bw()+ theme(axis.title = element_text(size=15),axis.text = element_text(size=13),strip.text = element_text(size=15)) 5.4 Saving graphs TIFF files exported directly from RStudio will only achieve a resolution of 72dpi.dpi is a measure of resolution  the higher the dpi, the sharper the image. ggsave is used to save a 500 dpi graph from the screen to a file. getwd() ## [1] &quot;D:/R/CASA_seminar2&quot; ggsave(&quot;Figure_A.tiff&quot;,units=&quot;in&quot;, width=14, height=6, dpi=500, compression = &#39;lzw&#39;) 5.5 Extensions 12 Extensions to ggplot2 for More Powerful R Visualizations ggthemes  more diagram themes, allows you to make graphics appear as if produced by Stata, Excel, The Economist, etc. ggformula  an interface similar to lattice ggpmisc  support for time series and polynomial ts ggtern  ternary diagrams for compositional data ggforce  various geom layers, including pie charts, and other extensions ggExtra  add marginal plots etc GGally  special purpose plots, coecient plots, model diagnostics, networks, correlation matrices plotly has the function ggplotly to translate ggplot results into JavaScript diagrams suitable for websites. "],["challenge.html", "6 Challenge", " 6 Challenge Let us move to the challenge part to exam your understanding of this seminar. Below are two graphs created by ggplot() based on housedata2. ##Challenge 1 head(housedata2) ## gor yearchi priceper region ## 1 E12000001 2009 1425.943 North East ## 2 E12000001 2012 1392.045 North East ## 3 E12000001 2015 1480.584 North East ## 4 E12000001 2016 1486.486 North East ## 5 E12000001 2011 1390.934 North East ## 6 E12000001 2014 1460.396 North East ggplot(data=housedata2, aes(x= yearchi, y=priceper,group=region,color=region)) +geom_point(size=2)+ geom_line(size = 1)+ scale_fill_manual(breaks=c(&quot;North East&quot;,&quot;North West&quot;,&quot;East Midlands&quot;,&quot;Yorkshire and The Humber&quot;,&quot;West Midlands&quot;,&quot;South West&quot;,&quot;East of England&quot;,&quot;South East&quot;,&quot;London&quot;), values = c(&quot;#E41A1C&quot;, &quot;#377EB8&quot; ,&quot;#4DAF4A&quot;, &quot;#984EA3&quot;, &quot;#FF7F00&quot; ,&quot;#FFFF33&quot;, &quot;#A65628&quot;, &quot;#F781BF&quot; ,&quot;#999999&quot;))+ theme_bw()+ theme(axis.title = element_text(size=15), axis.text = element_text(size=13),strip.text = element_text(size=15),legend.text = element_text(size=13),legend.title = element_text(size=15))+ ylab(&quot;House price per square metre&quot;)+ guides(color=guide_legend(&quot;Location&quot;)) + scale_y_continuous(labels = scales::comma,)+scale_x_continuous(breaks = c(2009,2011,2013,2015,2016)) ##Challenge 2 "],["answer.html", "7 Answer", " 7 Answer I will reaslse the answer in 5 mins. Here is the answer. "],["q-a.html", "Q &amp; A", " Q &amp; A "]]

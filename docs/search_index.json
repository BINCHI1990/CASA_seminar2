[["index.html", "Customizing ggplot2 plots in R for scientific research", " Customizing ggplot2 plots in R for scientific research Bin Chi 25/11/2020 "],["introduction.html", "1 Introduction", " 1 Introduction This second CASA0005 GI Systems and Science seminar. It aims advanced your to data visualization skill in R using the ggplot2 package. By the end of the seminar you will be able to: div.blue { background-color:#e6f0ff; border-radius: 5px; padding: 20px;} Advanced your knowledge about ggplot2 in R Know ten advanced customization in ggplot Create a high resolution graph for your research Trouble-soluting by yourself "],["recommend-resources.html", "2 Recommend resources 2.1 Resouces about ggplot2 packge 2.2 Resouces about graphs or data visualization in academic research 2.3 How to find more useful resources", " 2 Recommend resources Data visualisation is the visual representation of patterns in data. An efficient data visulaistion makes data more understandable. 2.1 Resouces about ggplot2 packge Data Visualization with ggplot2 Cheat Sheet - RStudio ggplot2: elegant graphics for data analysist Data Visualization in R with ggplot2 Top 50 ggplot2 Visualizations - The Master List (With Full R Code) 2.2 Resouces about graphs or data visualization in academic research Ten guidelines for effective data visualization in scientific publications Beyond Bar and Line Graphs: Time for a New Data Presentation Paradigm How to Write a Paper R Graphics Cookbook, 2nd edition Data visualization beginners guide: a definition, examples, and learning resources 2.3 How to find more useful resources GOOGLE "],["recap.html", "3 Recap", " 3 Recap Graphs request to be clear, precise and efficient, below listed some requirement of graphs: div.blue { background-color:#e6f0ff; border-radius: 5px; padding: 20px;} Have a title or figure caption Label axes Axis labels with units Have a legend Legible font size good resolution Tip: When you are ready to begin creating your figures,it worthwhile to understand the manuscript requirement first.so let use have a look at the CASA0005 assessment mark scheme. Meanwhile,different journal or publisher have different requirements in Figures. SAGE Publishing manuscript Submission Guidelines Manuscript Submission Guidelines Nature submission guidelines Wiley manuscript preparation guidelines Graphic in academic research is general expected to be clear, concise and easy to read. Now lets have a look at some examples in GIS course assignment last year. ![Example 2 Example 4 "],["getting-started.html", "4 Getting started 4.1 Installing ggplot2 package 4.2 Loading ggplot2 package 4.3 Dataset", " 4 Getting started 4.1 Installing ggplot2 package If you have install ggplot2 package before, you can jump to the next step: #install.packages(&quot;ggplot2&quot;) 4.2 Loading ggplot2 package Load the packages for todays seminar. #load the package for this seminar library(ggplot2) Note: Once you loaded the package successful, there will be a check mark display before the package under your Packages tab at the bottom right pane. 4.3 Dataset Lets start by loading two datasets. The first dataset records 924 transaction in 2009 for in two local authorities in England. The second the data records the median house price per square meter for each region in England between 2009 and 2016. These two datasets are derived from a linked house price in England (CASA working paper213). # read in the first dataset housedata1&lt;-read.csv(&quot;data1.csv&quot;) # read in the second dataset housedata2 &lt;- read.csv(&quot;data2.csv&quot;) The first house price dataset contains seven fields.They are separately refers to transaction price, transaction date.transaction year, propertys total floor area, the Census 2011 local authority district code, the Census 2011 local authority district name and region name. The second house price dataset contains four fields.They are separately refers to the Census 2011 region code, transaciton year, house price per square meter and region name. "],["graphics-with-ggplot2.html", "5 Graphics with ggplot2 5.1 Basic components of a ggplot2 Plot 5.2 Building a simple ggplot plot 5.3 Customizing the graph 5.4 Sub and superscript 5.5 Saving graphs 5.6 Sum up", " 5 Graphics with ggplot2 5.1 Basic components of a ggplot2 Plot There are two ways to produce plots in ggplot2, one is qplot() and the other is ggplot(). In this seminar we focus on ggplot. Data Visualization with ggplot2 Cheat Sheet - RStudio ggplot2 is based on the grammar of graphics, the idea that you can build every graph from the same few components: a data set, a set of geomsvisual marks that represent data points, and a coordinate system. 5.2 Building a simple ggplot plot Now let us start with creating a scatter plot using ggplot().The scatter plot is created to exploring the relationship between transaction price and total floor area in two different local authorities. ### Make sure your object is data fromas Since ggplot only works with data frames, we use is.data.frame()to check the whether the data is a data frame.If it is not, you need to tranfer it to a data frame #test the data set is a data frame is.data.frame(housedata1) ## [1] TRUE is.data.frame(housedata2) ## [1] TRUE ### Plot background and set the x and y axis ggplot(housedata1,aes(x=tfarea,y=price)) ### Add a layer (point) ggplot(housedata1,aes(x=tfarea,y=price))+ geom_point() 5.2.1 Color the point In ggplot, we can additional aesthetic values according to other properties from our dataset.Given housedata1 records transaction price in two local authorities, we can color the points differently depend on the ldnm field. ggplot(housedata1,aes(x=tfarea,y=price))+ geom_point(aes(color=ldnm)) ### Add a linear regression line To add a linear regression line to a scatter plot, we can do this by adding stat_smooth(),method = lm refers to fit the data linear model function ggplot(housedata1,aes(x=tfarea,y=price,group=ldnm))+ geom_point(aes(color=ldnm))+ geom_smooth(method=&quot;lm&quot;) ## `geom_smooth()` using formula &#39;y ~ x&#39; ### Split a single plot into many related plots You can split the scatter plot for each local authority with facet_wrap(). ggplot(housedata1,aes(x=tfarea,y=price,group=ldnm))+ geom_point(aes(color=ldnm))+ geom_smooth(method=&quot;lm&quot;)+ facet_wrap(~ ldnm) ## `geom_smooth()` using formula &#39;y ~ x&#39; 5.3 Customizing the graph 5.3.1 Change the point color The color of the points can be control with the color aesthetic.Below is the code to color all the points in blue. ggplot(housedata1,aes(x=tfarea,y=price,group=ldnm))+ geom_point(color=&quot;#56b4e9&quot;)+ geom_smooth(method=&quot;lm&quot;)+ facet_wrap(~ ldnm) ## `geom_smooth()` using formula &#39;y ~ x&#39; 5.3.2 Change the point size The size of the points can be controlled with the size aesthetic. The default value of size is 2. The following code set it to 1.5. ggplot(housedata1,aes(x=tfarea,y=price,group=ldnm))+ geom_point(color=&quot;#56b4e9&quot;,size = 1.2)+ geom_smooth(method=&quot;lm&quot;)+ facet_wrap(~ ldnm) ## `geom_smooth()` using formula &#39;y ~ x&#39; ### Change the point shape The size of the points can be controlled with the shape aesthetic. The default shape is solid circles and you can change it by accorroding to Point Shape Options in ggplot. The following code to show you how to plot the point as solid squares. ggplot(housedata1,aes(x=tfarea,y=price,group=ldnm))+ geom_point(color=&quot;#56b4e9&quot;,size = 1.2, shape=15)+ geom_smooth(method=&quot;lm&quot;)+ facet_wrap(~ ldnm) ## `geom_smooth()` using formula &#39;y ~ x&#39; ### Modify fitted regression lines The default color of the fit line is blue. This can be change by setting colour,The following code set a red fit line. #method 1 ggplot(housedata1,aes(x=tfarea,y=price,group=ldnm))+ geom_point(color=&quot;#56b4e9&quot;,size = 1.2)+ geom_smooth(method=&quot;lm&quot;,colour = &quot;red&quot;)+ facet_wrap(~ ldnm) ## `geom_smooth()` using formula &#39;y ~ x&#39; # method 2 ggplot(housedata1,aes(x=tfarea,y=price,group=ldnm))+ geom_point(color=&quot;#56b4e9&quot;,size = 1.2, shape=15)+ geom_smooth(method=&quot;lm&quot;,colour = &quot;#FF0000&quot;)+ facet_wrap(~ ldnm) ## `geom_smooth()` using formula &#39;y ~ x&#39; The grey area near the fit line is confidence region.you can disabled it with se = FALSE ggplot(housedata1,aes(x=tfarea,y=price,group=ldnm))+ geom_point(color=&quot;#56b4e9&quot;,size = 1.2)+ geom_smooth(method=&quot;lm&quot;,se = FALSE)+ facet_wrap(~ ldnm) ## `geom_smooth()` using formula &#39;y ~ x&#39; ### Change the axis titles labs function can be used to change axis labels.Here are two ways to change the axis title. #Method 1 ggplot(housedata1,aes(x=tfarea,y=price,group=ldnm))+ geom_point(color=&quot;#56b4e9&quot;,size = 1.2)+ geom_smooth(method=&quot;lm&quot;,se = FALSE)+ facet_wrap(~ ldnm)+ labs(x = &quot;Total floor area&quot;, y = &quot;Transaction price&quot;) ## `geom_smooth()` using formula &#39;y ~ x&#39; #Method 2 ggplot(housedata1,aes(x=tfarea,y=price,group=ldnm))+ geom_point(color=&quot;#56b4e9&quot;,size = 1.2, shape=15)+ geom_smooth(method=&quot;lm&quot;,se = FALSE)+ facet_wrap(~ ldnm)+ xlab(&quot;Total floor area&quot;)+ ylab(&quot;Transaction price&quot;) ## `geom_smooth()` using formula &#39;y ~ x&#39; ### Add axis units 5.3.2.1 Formatting y axis and labels Below is the code for add in the y axis unit in ggplot(). ggplot(housedata1,aes(x=tfarea,y=price,group=ldnm))+ geom_point(color=&quot;#56b4e9&quot;,size = 1.2)+ geom_smooth(method=&quot;lm&quot;,se = FALSE)+ facet_wrap(~ ldnm)+ xlab(&quot;Total floor area&quot;)+ ylab(&quot;Transaction price (Â£)&quot;) ## `geom_smooth()` using formula &#39;y ~ x&#39; If you want to change scale the y axis in ggplot 2 to thousands, you can use scale_y_continuous. ggplot(housedata1,aes(x=tfarea,y=price,group=ldnm))+ geom_point(color=&quot;#56b4e9&quot;,size = 1.2)+ geom_smooth(method=&quot;lm&quot;,se = FALSE)+ facet_wrap(~ ldnm)+ scale_y_continuous(name = &quot;Transaction Price (in Â£1000s)&quot;,labels = function(y) y / 1000)+ xlab(&quot;Total floor area&quot;) ## `geom_smooth()` using formula &#39;y ~ x&#39; You can also format the y labels more readable, with some common formats in scales package.Below is the code for formatting y labels in comma. ggplot(housedata1,aes(x=tfarea,y=price/1000,group=ldnm))+ geom_point(color=&quot;#56b4e9&quot;,size = 1.2)+ geom_smooth(method=&quot;lm&quot;,se = FALSE)+ facet_wrap(~ ldnm)+ scale_y_continuous(name = &quot;Transaction Price (in Â£1000s)&quot;,labels = scales::comma)+ xlab(&quot;Total floor area&quot;) ## `geom_smooth()` using formula &#39;y ~ x&#39; - to transfer y axis to a percentage scale ,you can use scale_y_continuous(labels = scales::percent)' - to display dollars on y axis, you can usescale_y_continuous(labels = scales::dollar) - to display euro on y axis, you can use `scale_y_continuous(labels = scales::dollar_format(suffix = , prefix = \"\")) ### Add x axis unit Below listed two approach to label the math notation in x axis. Math Notation for R Plot Titles: expression, bquote, &amp; Greek Letters offers more bquote application in R. #method 1 ggplot(housedata1,aes(x=tfarea,y=price/1000,group=ldnm))+ geom_point(color=&quot;#56b4e9&quot;,size = 1.2)+ geom_smooth(method=&quot;lm&quot;,se = FALSE)+ facet_wrap(~ ldnm)+ scale_y_continuous(name = &quot;Transaction Price (in Â£1000s)&quot;,labels = scales::comma)+ xlab(bquote(&quot;Total floor area (&quot; ~ m^2 ~ &quot;)&quot;)) ## `geom_smooth()` using formula &#39;y ~ x&#39; #method 2 ggplot(housedata1,aes(x=tfarea,y=price/1000,group=ldnm))+ geom_point(color=&quot;#56b4e9&quot;,size = 1.2)+ geom_smooth(method=&quot;lm&quot;,se = FALSE)+ facet_wrap(~ ldnm)+ scale_y_continuous(name = &quot;Transaction Price (in Â£1000s)&quot;,labels = scales::comma)+ xlab(expression(&quot;Total floor area (&quot; ~ m^3 ~ &quot;)&quot;)) ## `geom_smooth()` using formula &#39;y ~ x&#39; ### Change x-axis breaks breaks function can be use to change the x or y axis breaks. +scale_x_continuous(breaks = c(2009,2010,2011,2012,2013,2014,2015,2016)) ggplot(housedata1,aes(x=tfarea,y=price/1000,group=ldnm))+ geom_point(color=&quot;#56b4e9&quot;,size = 1.2)+ geom_smooth(method=&quot;lm&quot;,se = FALSE)+ facet_wrap(~ ldnm)+ scale_y_continuous(name = &quot;Transaction Price (in Â£1000s)&quot;,labels = scales::comma)+ xlab(bquote(&quot;Total floor area (&quot; ~ m^2 ~ &quot;)&quot;))+ scale_x_continuous(breaks = c(2009,2010,2011,2012,2013,2014,2015,2016)) ## `geom_smooth()` using formula &#39;y ~ x&#39; 5.3.3 Change x-axis breaks 5.3.4 Change x-axis breaks ### Add in title YOU can use ggtitle() to add a title in the plot. Below is the code to do so. ggplot(housedata1,aes(x=tfarea,y=price/1000,group=ldnm))+ geom_point(color=&quot;#56b4e9&quot;,size = 1.2)+ geom_smooth(method=&quot;lm&quot;,se = FALSE)+ facet_wrap(~ ldnm)+ scale_y_continuous(name = &quot;Transaction Price (in Â£1000s)&quot;,labels = scales::comma)+ xlab(expression(&quot;Total floor area (&quot; ~ m^3 ~ &quot;)&quot;))+ ggtitle(&quot;Transaction price against total floor area in local authorities, 2009&quot;) ## `geom_smooth()` using formula &#39;y ~ x&#39; ### Change themes There are eight themes can be directlty used to give the plot a sonsistent customized look.theme_grey() is the default ggplot2 theme, you can use theme_bw() to remove it. ggplot(housedata1,aes(x=tfarea,y=price/1000,group=ldnm))+ geom_point(color=&quot;#56b4e9&quot;,size = 1.2)+ geom_smooth(method=&quot;lm&quot;,se = FALSE)+ facet_wrap(~ ldnm)+ scale_y_continuous(name = &quot;Transaction Price (in Â£1000s)&quot;,labels = scales::comma)+ xlab(expression(&quot;Total floor area (&quot; ~ m^3 ~ &quot;)&quot;))+ ggtitle(&quot;Transaction price against total floor area in local authorities, 2009&quot;)+ theme_bw() ## `geom_smooth()` using formula &#39;y ~ x&#39; Blow are listed the other six theme, you can choose one you prefer for your academic writing. ggplot(housedata1,aes(x=tfarea,y=price/1000,group=ldnm))+ geom_point(color=&quot;#56b4e9&quot;,size = 1.2)+ geom_smooth(method=&quot;lm&quot;,se = FALSE)+ facet_wrap(~ ldnm)+ scale_y_continuous(name = &quot;Transaction Price (in Â£1000s)&quot;,labels = scales::comma)+ xlab(expression(&quot;Total floor area (&quot; ~ m^3 ~ &quot;)&quot;))+ ggtitle(&quot;Transaction price against total floor area in local authorities, 2009&quot;)+ theme_linedraw() ## `geom_smooth()` using formula &#39;y ~ x&#39; ggplot(housedata1,aes(x=tfarea,y=price/1000,group=ldnm))+ geom_point(color=&quot;#56b4e9&quot;,size = 1.2)+ geom_smooth(method=&quot;lm&quot;,se = FALSE)+ facet_wrap(~ ldnm)+ scale_y_continuous(name = &quot;Transaction Price (in Â£1000s)&quot;,labels = scales::comma)+ xlab(expression(&quot;Total floor area (&quot; ~ m^3 ~ &quot;)&quot;))+ ggtitle(&quot;Transaction price against total floor area in local authorities, 2009&quot;)+ theme_light() ## `geom_smooth()` using formula &#39;y ~ x&#39; ggplot(housedata1,aes(x=tfarea,y=price/1000,group=ldnm))+ geom_point(color=&quot;#56b4e9&quot;,size = 1.2)+ geom_smooth(method=&quot;lm&quot;,se = FALSE)+ facet_wrap(~ ldnm)+ scale_y_continuous(name = &quot;Transaction Price (in Â£1000s)&quot;,labels = scales::comma)+ xlab(expression(&quot;Total floor area (&quot; ~ m^3 ~ &quot;)&quot;))+ ggtitle(&quot;Transaction price against total floor area in local authorities, 2009&quot;)+ theme_dark() ## `geom_smooth()` using formula &#39;y ~ x&#39; ggplot(housedata1,aes(x=tfarea,y=price/1000,group=ldnm))+ geom_point(color=&quot;#56b4e9&quot;,size = 1.2)+ geom_smooth(method=&quot;lm&quot;,se = FALSE)+ facet_wrap(~ ldnm)+ scale_y_continuous(name = &quot;Transaction Price (in Â£1000s)&quot;,labels = scales::comma)+ xlab(expression(&quot;Total floor area (&quot; ~ m^3 ~ &quot;)&quot;))+ ggtitle(&quot;Transaction price against total floor area in local authorities, 2009&quot;)+ theme_minimal() ## `geom_smooth()` using formula &#39;y ~ x&#39; ggplot(housedata1,aes(x=tfarea,y=price/1000,group=ldnm))+ geom_point(color=&quot;#56b4e9&quot;,size = 1.2)+ geom_smooth(method=&quot;lm&quot;,se = FALSE)+ facet_wrap(~ ldnm)+ scale_y_continuous(name = &quot;Transaction Price (in Â£1000s)&quot;,labels = scales::comma)+ xlab(expression(&quot;Total floor area (&quot; ~ m^3 ~ &quot;)&quot;))+ ggtitle(&quot;Transaction price against total floor area in local authorities, 2009&quot;)+ theme_classic() ## `geom_smooth()` using formula &#39;y ~ x&#39; ggplot(housedata1,aes(x=tfarea,y=price/1000,group=ldnm))+ geom_point(color=&quot;#56b4e9&quot;,size = 1.2)+ geom_smooth(method=&quot;lm&quot;,se = FALSE)+ facet_wrap(~ ldnm)+ scale_y_continuous(name = &quot;Transaction Price (in Â£1000s)&quot;,labels = scales::comma)+ xlab(expression(&quot;Total floor area (&quot; ~ m^3 ~ &quot;)&quot;))+ ggtitle(&quot;Transaction price against total floor area in local authorities, 2009&quot;)+ theme_void() ## `geom_smooth()` using formula &#39;y ~ x&#39; The R package ggthemes provides another gallery of custom ggplot themes.You can see detials in package:ggthemes  All Your Figure Are Belong To Us. 5.3.5 Change the font size You can also manual customize the ggplot by modify the components in theme(). Below I give a series if example on how to change the font size in the plot, let us do step-by-step. (1) ggplot(housedata1,aes(x=tfarea,y=price/1000,group=ldnm))+ geom_point(color=&quot;#56b4e9&quot;,size = 1.2)+ geom_smooth(method=&quot;lm&quot;,se = FALSE)+ facet_wrap(~ ldnm)+ scale_y_continuous(name = &quot;Transaction Price (in Â£1000s)&quot;,labels = scales::comma)+ xlab(expression(&quot;Total floor area (&quot; ~ m^3 ~ &quot;)&quot;))+ ggtitle(&quot;Transaction price against total floor area in local authorities, 2009&quot;)+ theme_bw()+ theme(axis.title = element_text(size=15), axis.text = element_text(size=13),strip.text = element_text(size=15),legend.text = element_text(size=13),legend.title = element_text(size=15)) ## `geom_smooth()` using formula &#39;y ~ x&#39; 5.3.5.1 5.3.6 5.3.6.1 ## 5.3.7 5.3.8 Change the axis titles ggplot(housedata1,aes(x=tfarea,y=price,group=ldnm))+ geom_point(aes(color=ldnm))+ geom_smooth(method=&quot;lm&quot;)+ facet_wrap(~ ldnm) ## `geom_smooth()` using formula &#39;y ~ x&#39; 5.3.8.1 head(housedata2) ## gor yearchi priceper region ## 1 E12000001 2009 1425.943 North East ## 2 E12000001 2012 1392.045 North East ## 3 E12000001 2015 1480.584 North East ## 4 E12000001 2016 1486.486 North East ## 5 E12000001 2011 1390.934 North East ## 6 E12000001 2014 1460.396 North East ggplot(data=housedata2, aes(x= yearchi, y=priceper,group=region,color=region)) +geom_point(size=2)+ geom_line( size = 1)+ scale_colour_manual(values=c(&quot;#F8766D&quot;, &quot;#D39200&quot;,&quot;#000000&quot;,&quot;#93AA00&quot;, &quot;#00BA38&quot; ,&quot;#00C19F&quot; ,&quot;#00B9E3&quot;, &quot;#619CFF&quot; ,&quot;#DB72FB&quot;, &quot;#FF61C3&quot;))+ theme_bw()+ theme(axis.title = element_text(size=15), axis.text = element_text(size=13),strip.text = element_text(size=15),legend.text = element_text(size=13),legend.title = element_text(size=15))+ ylab(&quot;House price per square metre&quot;)+ guides(color=guide_legend(&quot;Location&quot;)) + scale_y_continuous(labels = scales::comma,)+scale_x_continuous(breaks = c(2009,2010,2011,2012,2013,2014,2015,2016)) 5.3.8.2 5.3.8.3 5.3.9 Extensions to ggplot2 ggthemes  more diagram themes, allows you to make graphics appear as if produced by Stata, Excel, The Economist, etc. ggformula  an interface similar to lattice ggpmisc  support for time series and polynomial ts ggtern  ternary diagrams for compositional data ggforce  various geom layers, including pie charts, and other extensions ggExtra  add marginal plots etc GGally  special purpose plots, coecient plots, model diagnostics, networks, correlation matrices plotly has the function ggplotly to translate ggplot results into JavaScript diagrams suitable for websites. 5.3.10 5.3.10.1 Here is a review of existing methods. 5.4 Sub and superscript 5.5 Saving graphs TIFF files exported directly from RStudio will only achieve a resolution of 72dpi.dpi is a measure of resolution  the higher the dpi, the sharper the image. In RStudio, you can click on the Export button and export your plots Using ggsave is used to save a ggplot2 graph from the screen to a file ggsave(&quot;Figure_B.tiff&quot;,units=&quot;in&quot;, width=14, height=6, dpi=500, compression = &#39;lzw&#39;) 5.6 Sum up 12 Extensions to ggplot2 for More Powerful R Visualizations "],["challenge.html", "6 Challenge", " 6 Challenge "],["answer.html", "7 Answer", " 7 Answer We have finished a nice book. "],["q-a-.html", "8 Q &amp; A [-]", " 8 Q &amp; A [-] "]]
